<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="79ac2189-6fe7-4081-b568-8830dd8c8c60" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codestream.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/composerJson.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/absinthe_plug.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/benchee.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/benchee_json.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/connection.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/cowboy.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/cowlib.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/db_connection.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/decimal.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/dialyze.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/earmark.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/ecto.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/ecto_sql.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/ex_doc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/file_system.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/gettext.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/hackney.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/inch_ex.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/jason.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/kadabra.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/mime.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/phoenix.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/phoenix_ecto.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/phoenix_html.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/phoenix_live_reload.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/phoenix_pubsub.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/plug.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/plug_cowboy.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/plug_crypto.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/poison.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/postgrex.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/ranch.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/telemetry.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/websocket_client.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/x509.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/runConfigurations/Run_server.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/start.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.formatter.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/leicester.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/leicester.ex" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/mix.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/leicester_test.exs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/test_helper.exs" beforeDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="CompilerWorkspaceConfiguration">
    <option name="CLEAR_OUTPUT_DIRECTORY" value="false" />
  </component>
  <component name="ComposerSettings">
    <execution>
      <executable />
    </execution>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="YIExhmiv" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1QIC9xsD7Yo36j1dIxOaLSxRCSn" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="add_unversioned_files" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="Credo" />
    <property name="show.migrate.to.gradle.popup" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Docker.Run server">
    <configuration name="docker-compose.yml.db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.leicester: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="leicester" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Run server" />
      <item itemvalue="Docker.docker-compose.yml.db: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.leicester: Compose Deployment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.leicester: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.db: Compose Deployment" />
        <item itemvalue="Docker.Run server" />
      </list>
    </recent_temporary>
  </component>
  <component name="ServiceViewManager">
    <option name="allServicesViewState">
      <serviceView>
        <treeState>
          <expand>
            <path>
              <item name="services root" type="e789fda9:ObjectUtils$Sentinel" />
              <item name="com.intellij.execution.services.ServiceModel$ServiceNode@7dcac712" type="9fbbdea:ServiceModel$ServiceNode" />
            </path>
            <path>
              <item name="services root" type="e789fda9:ObjectUtils$Sentinel" />
              <item name="com.intellij.execution.services.ServiceModel$ServiceNode@7dcac712" type="9fbbdea:ServiceModel$ServiceNode" />
              <item name="com.intellij.execution.services.ServiceModel$ServiceNode@5b52f1f" type="9fbbdea:ServiceModel$ServiceNode" />
            </path>
            <path>
              <item name="services root" type="e789fda9:ObjectUtils$Sentinel" />
              <item name="com.intellij.execution.services.ServiceModel$ServiceNode@7dcac712" type="9fbbdea:ServiceModel$ServiceNode" />
              <item name="com.intellij.execution.services.ServiceModel$ServiceNode@5b52f1f" type="9fbbdea:ServiceModel$ServiceNode" />
              <item name="com.intellij.execution.services.ServiceModel$ServiceNode@202f8092" type="9fbbdea:ServiceModel$ServiceNode" />
            </path>
          </expand>
          <select />
        </treeState>
      </serviceView>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="79ac2189-6fe7-4081-b568-8830dd8c8c60" name="Default Changelist" comment="" />
      <created>1567448575247</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1567448575247</updated>
      <workItem from="1567448579113" duration="263000" />
      <workItem from="1567466899052" duration="17000" />
      <workItem from="1567466975125" duration="6186000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>